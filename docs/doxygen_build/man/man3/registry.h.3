.TH "configuration/registry.h" 3 "20 Apr 2010" "Version 0.2" "BNG Bootloader" \" -*- nroff -*-
.ad l
.nh
.SH NAME
configuration/registry.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include '../storage/persistent.h'\fP
.br

.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBCONFIG_KEY\fP { \fBDUMMY_CONFIG_KEY\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBconfig_get\fP (enum \fBCONFIG_KEY\fP key, void *buffer)"
.br
.ti -1c
.RI "int \fBconfig_set\fP (enum \fBCONFIG_KEY\fP key, const void *buffer)"
.br
.in -1c
.SH "Detailed Description"
.PP 
This module allows to store to and retrieve configuration values from a persistent storage device. It uses the \fBstorage/persistent.h\fP interface for all read/write operations.
.PP
\fBTodo\fP
.RS 4
Define the values in the \fCCONFIG_KEY\fP enum. 
.PP
Should we make this interface more generic and not define the config keys using enum values? This woul allow for non hard coded keys but we loose compile-time error checking. If we change the interface in the described way, there will be the need for a \fCconfig_clear\fP function. 
.PP
The two get/set functions are very generic and involve a relatively large amount of code to be used, wouldn't it be better to define the different types of the configuration directives (mainly strings and ints) and to offer type-specific getters and setters (i.e. \fCconfig_get_int\fP)? 
.RE
.PP

.PP
Definition in file \fBregistry.h\fP.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBCONFIG_KEY\fP"Defines the different available configuration directives. This keys can be used to get or set configuration values with the \fCconfig_get\fP and \fCconfig_set\fP functions. 
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIDUMMY_CONFIG_KEY \fP\fP

.PP
Definition at line 31 of file registry.h.
.SH "Function Documentation"
.PP 
.SS "int config_get (enum \fBCONFIG_KEY\fP key, void * buffer)"Reads the value identified by \fIkey\fP argument from the config registry and writes it to the memory area pointed to by \fIbuffer\fP.
.PP
\fBParameters:\fP
.RS 4
\fIkey\fP The key of the configuration directive to read. 
.br
\fIbuffer\fP The pointer to the memory area to which the value has to be written.
.RE
.PP
\fBReturns:\fP
.RS 4
0 if the value was read correctly, a negative error code otherwise. 
.RE
.PP

.SS "int config_set (enum \fBCONFIG_KEY\fP key, const void * buffer)"Sets the value identified by \fIkey\fP to the content of \fIbuffer\fP.
.PP
\fBParameters:\fP
.RS 4
\fIkey\fP The key of the configuration directive to read. 
.br
\fIbuffer\fP The pointer to the memory area from which the value has to be read.
.RE
.PP
\fBReturns:\fP
.RS 4
0 if the value was set correctly, a negative error code otherwise. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for BNG Bootloader from the source code.
