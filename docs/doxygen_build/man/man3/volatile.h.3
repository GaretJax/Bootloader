.TH "storage/volatile.h" 3 "20 Apr 2010" "Version 0.2" "BNG Bootloader" \" -*- nroff -*-
.ad l
.nh
.SH NAME
storage/volatile.h \- 
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBvstorage_read\fP (char *buffer, void *address, int length)"
.br
.ti -1c
.RI "int \fBvstorage_write\fP (const char *buffer, void *address, int length)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Interface to read/write operations on a volatile storage devices or interfaces.
.PP
The prototypes contained in this file can be implemented multiple times to be adapted to different storage devices such as RAMs, Cache chips or Hard Disk Drives (i.e. for development/testing purposes). 
.PP
Definition in file \fBvolatile.h\fP.
.SH "Function Documentation"
.PP 
.SS "int vstorage_read (char * buffer, void * address, int length)"Reads some data from the volatile storage handler compiled with this function.
.PP
\fBTodo\fP
.RS 4
Define the possible error numbers and their respective meaning.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIbuffer\fP The pointer to a char buffer where the read data has to be written. 
.br
\fIaddress\fP The address from which to start to read from the storage device. 
.br
\fIlength\fP The number of bytes to read from the storage device, starting at the given address.
.RE
.PP
\fBReturns:\fP
.RS 4
The number of bytes read, a negative number if an error occurred. 
.RE
.PP

.SS "int vstorage_write (const char * buffer, void * address, int length)"Writes some data to the volatile storage handler compiled with this function.
.PP
\fBTodo\fP
.RS 4
Define the possible error numbers and their respective meaning.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIbuffer\fP The pointer to a char buffer from where the data to write has to be read. 
.br
\fIaddress\fP The address from which to start to write to the storage device. 
.br
\fIlength\fP The number of bytes to write to the storage device, starting at the given address.
.RE
.PP
\fBReturns:\fP
.RS 4
The number of bytes written, a negative number if an error occurred. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for BNG Bootloader from the source code.
